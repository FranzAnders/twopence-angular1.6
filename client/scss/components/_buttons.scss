
/*------------------------------------*\
    #Buttons  (Default button sizes being used from Foundation 5, disable at settings--overwrite.scss)
\*------------------------------------*/

button,
.button {
  white-space: nowrap; 
  margin-bottom: rem-calc($base-magic-number);
  background-color: transparent; 
  @extend %button;
  @include border-radius(4px); 

  .button-inner {
    position: relative; 
    z-index: 1; 
    font-weight: bold;
    text-transform: uppercase;
    @include type-setting(-1); 

  }

  &.is-inactive {
    opacity: .2; 
    pointer-events: none; 
    
  }

}


.button--primary {
  background-color: $primaryColor;
  position: relative; 
  color: #fff; 
  border: 1px solid transparent; 
  @include transition(all .1s ease .1s); 

  &:hover,
  &:focus {

    color: $primaryColor; 
    background-color: transparent;
    border: 1px solid $primaryColor; 

  }

}


.button--secondary {
  background-color: $secondaryColor;
  position: relative; 
  color: #fff; 
  border: 1px solid $secondaryColor; 
  @include transition(all .2s ease); 
  
  &:hover,
  &:focus {
    color: $secondaryColor;
    background-color: transparent; 
    border: 1px solid $secondaryColor; 
  }
}


.button--tertiary {
  background-color: transparent;
  position: relative; 
  color: $secondaryColor; 
  border: 1px solid $secondaryColor; 
  @include transition(all .1s ease .1s); 

  &:hover,
  &:focus {
    color: #fff;
    fill: #fff; 
    border: 1px solid $secondaryColor;
    background-color: $secondaryColor;  

  }
}


.button--quaternary {
  background-color: transparent;
  position: relative; 
  color: $primaryColor; 
  fill: $primaryColor; 
  border: 1px solid $primaryColor; 
  @include transition(all .1s ease .1s); 

  &:hover,
  &:focus {
    color: #fff;
    fill: #fff; 
    border: 1px solid $primaryColor;
    background-color: $primaryColor;  

  }
}


.button--quintenary {

  background-color: $tertiaryColor;
  position: relative; 
  color: #fff; 
  border: 1px solid $tertiaryColor; 
  @include transition(all .2s ease); 
  @include box-shadow(0 1px 3px rgba(30,30,30, .2)); 

  &:hover,
  &:focus {
    color: $tertiaryColor;
    background-color: transparent; 
    border: 1px solid $tertiaryColor; 
    @include box-shadow(0 1px 16px rgba(30,30,30, .2)); 

  }

}

.button--withIcon {

  .button-icon, 
  .button-label {
    display: inline-block; 

  }

  .button-icon {
    width: rem-calc(24px); 
    margin-right: rem-calc($level1); 

  }

  .button-label {
    position: relative; 

  }
}


.button--link {
  background: transparent; 
  color: $primaryColor; 

  &:hover, 
  &:focus {
    color: $secondaryColor; 
    text-decoration: underline; 

  }

}





/*------------------------------------*\
    #Play Button
\*------------------------------------*/


.playButton {
  
  background-color: $secondaryColor; 
  height: rem-calc(40px); 
  width: rem-calc(40px); 
  position: relative; 
  @include transform(translateX(-50px)); 
  @extend .grid; 
  @extend .grid--center; 
  @include transition(all .8s ceaser($easeInOutQuint)); 
  @include border-radius(100%); 
  

  &:after,
  &:before {
    
    @include transition(all .8s ceaser($easeInOutQuint)); 

  } 

  &:after {

    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    left: 4px;
    margin: auto;
    height: 16px;
    width: 10px;
    bottom: 0;
    border-top: 11px solid transparent;
    border-bottom: 11px solid transparent;
    border-left: 17px solid #fff;
    z-index: 2; 

  }

  &:before {  
    
    content: " "; 
    height: 100%; 
    width: 100%; 
    background-color: $secondaryColor; 
    position: absolute; 
    right: 0; 
    left: 0; 
    bottom: 0; 
    top:0; 
    z-index: 1; 
    border: 2px solid transparent; 
    @include border-radius(100%); 

  }

  .playButton-inner {

    position: absolute; 
    font-weight: bold;
    text-transform: uppercase;
    color: #fff; 
    @include transform(translateX(55px)); 
    @include transition(all .8s ceaser($easeInOutQuint)); 

  }


  &:hover,
  &:focus {
    

    .playButton-inner {
      
      opacity: 1; 
      color: #fff; 
      @include transform(translateX(55px)); 

    }


    &:before {  
      
      background-color: transparent; 
      border: 2px solid $secondaryColor; 
      @include transform(scale(1.2));

    }
  }

}


.playButton--primary {

  .playButton-inner {

    color: $accentColor; 

  }

  &:hover, 
  &:focus {

    color: $accentColor; 
  }

}


.playButton--secondary {

  .playButton-inner {

    color: #fff; 

  }

  &:hover, 
  &:focus {

    color: #fff; 
  }

}





/*------------------------------------*\
    #Button Sizes (Extends _generics.scss Margins and padding values)
\*------------------------------------*/


.button--micro {
    padding: rem-calc($level1);
    padding-right: rem-calc($level2);
    padding-left: rem-calc($level2);
    @extend %text-micro; 
}

.button--small {
    padding: rem-calc($level2);
    padding-right: rem-calc($level2);
    padding-left: rem-calc($level2);
    @include type-setting(-1);

}


.button--medium {
    padding: rem-calc($level2);
    padding-right: rem-calc($level2);
    padding-left: rem-calc($level2);
    @include type-setting(0);

}

.button--large {
    padding: rem-calc($level3);
    padding-right: rem-calc($level3);
    padding-left: rem-calc($level3);
    @include type-setting(1);
}

.button--kilo {
    padding: rem-calc(16);
    padding-right: rem-calc($level6);
    padding-left: rem-calc($level6); 
    @extend %h2; 
}

.button--mega {
    padding: rem-calc(18);
    padding-right: rem-calc($level7);
    padding-left: rem-calc($level7); 
    @extend %h1; 
}

.button--giga {
    padding: rem-calc(22);
    padding-right: rem-calc($level7);
    padding-left: rem-calc($level7); 
    @extend %h1; 
}





/*------------------------------------*\
    #Button Properties
\*------------------------------------*/


.button--expanded {
    width: 100%; 
}






/*------------------------------------*\
    #Button Animations  
\*------------------------------------*/


@include keyframes(anim-naira-2) {

   50% {
        -webkit-transform: translate3d(0, 50%, 0) rotate3d(0, 0, 1, 10deg);
        transform: translate3d(0, 50%, 0) rotate3d(0, 0, 1, 10deg);
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
    }
    100% {
        -webkit-transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
        transform: translate3d(0, 0%, 0) rotate3d(0, 0, 1, 0deg);
    }

}
