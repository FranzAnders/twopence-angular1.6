
/*------------------------------------*\
    #Buttons
\*------------------------------------*/

/*------------------------------------*\
    #Default Class (Extends from themes.scss)
\*------------------------------------*/

%button {
	transition: none;
	border: 0;
	color: #fff;
	cursor: pointer; 
	text-align: center;
    vertical-align: middle;
    @extend %display-inlineBlock;
}


/*------------------------------------*\
    #Button Types  
\*------------------------------------*/


%button--3d {
	&:active {
			outline: none;
			position: relative; 
			top: 2px;
	}

	&:focus {
			outline: none;
	}
}

%button--flat {
	&:active {
			outline: none;
	}

	&:focus {
			outline: none;
	}
}


@mixin button--3d($color) {
        @content;
        
        background-color: $color;
        outline: 0; 
		@include single-box-shadow(0, 2px, 0, 0, darken($color, 20%));

		&:hover {
				background-color: lighten($color, 5%);
		}	

		&:active {
				background-color: lighten($color, 6%);
				bottom: -2px; 
				position: relative; 
                @include single-box-shadow(0, 1px, 0, 0, darken($color, 20%));
                
		}

		&:focus {
				background-color: lighten($color, 5%);
		}
}

@mixin button--flat($color, $textColor: "", $hoverTextColor: "") {
        @content;
        background-color: $color;
        color: $textColor; 
        @include transition(all .2s ceaser($easeInOutQuint));

        &:hover, 
        &:focus {
            color: $hoverTextColor;
			background-color: darken($color, 15%); 
		}

        &:active {

            background-color: darken($color, 15%); 
            @include transition(all 0 ceaser($easeInOutQuint));
        }
}


@mixin button--outline($color, $textColor: "", $hoverTextColor: "") {
        @content;
        background-color: transparent;
        border: 2px solid $color; 
        color: $textColor;
        @include transition(all .2s ceaser($easeInOutQuint));

        &:hover,
        &:focus, {
            @if $hoverTextColor != "" {
                
                color: $hoverTextColor;

            } else {
                color: #fff; 
            }

            background-color: $color; 

        }


        &:active {
            
            background-color: darken($color, 15%); 
            @include transition(all 0 ceaser($easeInOutQuint));

        }
        
}


@mixin button--outlineInvert($color, $textColor: "", $hoverTextColor: "") {
        @content;
        background-color: $color; 
        color: $textColor;
        border: 2px solid $color; 
        @include transition(all .2s ceaser($easeInOutQuint));

        &:hover,
        &:focus, {
            @if $hoverTextColor != "" {
                
                color: $color;

            } else {
                color: #fff; 
            }

            background-color: transparent;
            border: 2px solid $color; 

        }


        &:active {
            
            background-color: transparent;
            border: 2px solid darken($color, 15%); 
            color: darken($color, 15%); 
            @include transition(all 0 ceaser($easeInOutQuint));

        }
        
}







/*------------------------------------*\
    #Outline Button Style #1
\*------------------------------------*/


// Button style inspired by http://tympanus.net/Development/ButtonStylesInspiration/
@mixin button--outline2($color, $textColor: "", $hoverTextColor: "") {
    @content;
    overflow: hidden; 
    border: 2px solid $color; 
    color: $textColor;  
    background-color: transparent; 
    @include transition(background-color .4s ceaser($easeInOutQuint));
    @extend %position-relative; 

    &:before {

        content: '';
        left: -50%;
        width: 200%;
        height: 200%;
        background-color: darken($color, 15%); 
        top: -50%;
        @include transform(translate3d(0, 100%, 0), rotate3d(0, 0, 1, 10deg));
        @extend %position-absolute; 

    }

    .button-textState1 {
        @extend %display-block; 
    }
    

    .button-textState2 {
        width: 100%;
        color: #fff;
        @include transform(translate3d(0, 100%, 0));
        @extend %position-absoluteCentered; 

    }
    
    .button-textState1,
    .button-textState2 {
        -webkit-transition: -webkit-transform 0.3s;
        transition: transform 0.3s;
        -webkit-transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
        transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
    }

    &:hover, 
    &:active,
    &:focus,
    &.is-active {

        color: #fff; 
        border-color: darken($color, 15%); 
        @include transition(background-color .4s ceaser($easeInOutQuint));
        

        .button-textState2 {

            @include transform(translate3d(0, 25%, 0)); 

        }

        .button-textState1 {
            @include transform(translate3d(0, -150%, 0)); 
        }

        &:before {

            -webkit-animation: anim-naira-2 0.3s forwards ease-in;
            animation: anim-naira-2 0.3s forwards ease-in;

        }

    }
    
    
    // We have to make these specific sizing classes so the transform 
    // on the button-textState2 is always in the center of the button
    // regardless of button size 
    &.button--micro {

        &:hover, 
        &:active,
        &:focus,
        &.is-active {

            .button-textState2 {

                @include transform(translate3d(0, 10%, 0)); 

            }
        }

    }

    &.button--small {

        &:hover, 
        &:active,
        &:focus,
        &.is-active {

            .button-textState2 {

                @include transform(translate3d(0, 20%, 0)); 

            }
        }

    }

}



// Removes blue border around selected inputs, buttons or elements with tab-index attr
%disableDefaultHighlight {

    outline: none;  
 -webkit-tap-highlight-color: rgba(0,0,0,0);
 -webkit-tap-highlight-color: transparent;
 -webkit-touch-callout: none;
 -webkit-user-select: none;
 -moz-user-select: none;
 -ms-user-select: none;
  user-select: none;
}






/*------------------------------------*\
    #Outline Button Style With two States #2
\*------------------------------------*/


// Button style inspired by http://tympanus.net/Development/ButtonStylesInspiration/
@mixin button--outline3(
    $pBackgroundColor: "", 
    $pBackgroundColorOnHover: "",
    $pTextColor: "", 
    $pTextColorOnHover: "",
    $pOutlineColor: "",
    $pOutlineColorOnHover: "") {
  

    $timingFunction: cubic-bezier(0.2, 1, 0.3, 1); 
    $animationSpeed: 0.3s; 

    @content;
    overflow: hidden; 
    border: 2px solid $pOutlineColor; 
    color: $pTextColor;  
    background-color: $pBackgroundColor; 
    @include transition(all $animationSpeed $timingFunction);
    @extend %position-relative;   

    .button-textState1 {
        opacity: 1; 
        color: $pTextColor; 
        @include transform(translateY(0));
        @extend %display-block; 
    }
    

    .button-textState2 {
        width: 100%;
        color: $pTextColorOnHover;
        opacity: 0; 
        @include transform(translateY(100%));
        @extend %position-absoluteCentered; 

    }
    
    .button-textState1,
    .button-textState2 {
        @include transition(all $animationSpeed  $timingFunction);
    }

    &:hover, 
    &:active,
    &:focus,
    &.is-active {

        color: #fff; 
        border-color: $pOutlineColorOnHover; 
        background-color: $pBackgroundColorOnHover;  

        .button-textState1 {

            opacity: 0; 
            @include transform(translateY(-50%));

        }

        .button-textState2 {
            
            opacity: 1; 
            @include transform(translateY(25%));

        }

    }


    
    // We have to make these specific sizing classes so the transform 
    // on the button-textState2 is always in the center of the button
    // regardless of button size 
    &.button--micro {

        &:hover, 
        &:active,
        &:focus,
        &.is-active {

            .button-textState2 {

                @include transform(translate3d(0, 10%, 0)); 

            }
        }

    }

    &.button--small {

        &:hover, 
        &:active,
        &:focus,
        &.is-active {

            .button-textState2 {

                @include transform(translate3d(0, 20%, 0)); 

            }
        }

    }

}



// Removes blue border around selected inputs, buttons or elements with tab-index attr
%disableDefaultHighlight {

    outline: none;  
 -webkit-tap-highlight-color: rgba(0,0,0,0);
 -webkit-tap-highlight-color: transparent;
 -webkit-touch-callout: none;
 -webkit-user-select: none;
 -moz-user-select: none;
 -ms-user-select: none;
  user-select: none;
}
